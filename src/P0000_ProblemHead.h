//
// Created by yongpu on 2019/9/29.
//

#ifndef LEETCODE_P0000_PROBLEMHEAD_H
#define LEETCODE_P0000_PROBLEMHEAD_H


#include <iostream>
#include "P0001_TwoSum.h"
#include "P0002_AddTwoNumbers.h"
#include "P0003_LongestSubstringWithoutRepeatingCharacters.h"
#include "P0004_MedianOfTwoSortedArrays.h"
#include "P0005_LongestPalindromicSubstring.h"
#include "P0006_ZigZagConversion.h"
#include "P0007_ReverseInteger.h"
#include "P0008_StringToInteger_atoi.h"
#include "P0009_PalindromeNumber.h"
#include "P0010_RegularExpressionMatching.h"
#include "P0011_ContainerWithMostWater.h"
#include "P0012_IntegerToRoman.h"
#include "P0013_RomanToInteger.h"
#include "P0014_LongestCommonPrefix.h"
#include "P0015_3Sum.h"
#include "P0016_3SumClosest.h"
#include "P0017_LetterCombinationsOfAPhoneNumber.h"
#include "P0018_4Sum.h"
#include "P0019_RemoveNthNodeFromEndOfList.h"
#include "P0020_ValidParentheses.h"
#include "P0021_MergeTwoSortedLists.h"
#include "P0022_GenerateParentheses.h"
#include "P0023_MergeKSortedLists.h"
#include "P0024_SwapNodesInPairs.h"
#include "P0025_ReverseNodesInkGroup.h"
#include "P0026_RemoveDuplicatesFromSortedArray.h"
#include "P0027_RemoveElement.h"
#include "P0028_ImplementstrStr.h"
#include "P0029_DivideTwoIntegers.h"
#include "P0030_SubstringWithConcatenationOfAllWords.h"
#include "P0031_NextPermutation.h"
#include "P0032_LongestValidParentheses.h"
#include "P0033_SearchInRotatedSortedArray.h"
#include "P0034_FindFirstndLastPositionOfElementInSortedArray.h"
#include "P0035_SearchInsertPosition.h"
#include "P0036_ValidSudoku.h"
#include "P0037_SudokuSolver.h"
#include "P0038_CountAndSay.h"
#include "P0039_CombinationSum.h"
#include "P0040_CombinationSumII.h"
#include "P0041_FirstMissingPositive.h"
#include "P0042_TrappingRainWater.h"
#include "P0043_MultiplyStrings.h"
#include "P0044_WildcardMatching.h"
#include "P0045_JumpGameII.h"
#include "P0046_Permutations.h"
#include "P0047_PermutationsII.h"
#include "P0048_RotateImage.h"
#include "P0049_GroupAnagrams.h"
#include "P0050_Pow_x_n.h"
#include "P0051_N_Queens.h"
#include "P0052_N_QueensII.h"
#include "P0053_MaximumSubarray.h"
#include "P0054_SpiralMatrix.h"
#include "P0055_JumpGame.h"
#include "P0056_MergeIntervals.h"
#include "P0057_InsertInterval.h"
#include "P0058_LengthOfLastWord.h"
#include "P0059_SpiralMatrixII.h"
#include "P0060_PermutationSequence.h"
#include "P0061_RotateList.h"
#include "P0062_UniquePaths.h"
#include "P0063_UniquePathsII.h"
#include "P0064_MinimumPathSum.h"
#include "P0065_ValidNumber.h"
#include "P0066_PlusOne.h"
#include "P0067_AddBinary.h"
#include "P0068_TextJustification.h"
#include "P0069_Sqrt_x.h"
#include "P0070_ClimbingStairs.h"
#include "P0071_SimplifyPath.h"
#include "P0072_EditDistance.h"
#include "P0073_SetMatrixZeroes.h"
#include "P0074_SearchA2DMatrix.h"
#include "P0075_SortColors.h"
#include "P0076_MinimumWindowSubstring.h"
#include "P0077_Combinations.h"
#include "P0078_Subsets.h"
#include "P0079_WordSearch.h"
#include "P0080_RemoveDuplicatesFromSortedArrayII.h"
#include "P0081_SearchInRotatedSortedArrayII.h"
#include "P0082_RemoveDuplicatesFromSortedListII.h"
#include "P0083_RemoveDuplicatesFromSortedList.h"
#include "P0084_LargestRectangleInHistogram.h"
#include "P0085_MaximalRectangle.h"
#include "P0086_PartitionList.h"
#include "P0087_ScrambleString.h"
#include "P0088_MergeSortedArray.h"
#include "P0089_GrayCode.h"
#include "P0090_SubsetsII.h"
#include "P0091_DecodeWays.h"
#include "P0092_ReverseLinkedListII.h"
#include "P0093_RestoreIPAddresses.h"
#include "P0094_BinaryTreeInorderTraversal.h"
#include "P0095_UniqueBinarySearchTreesII.h"
#include "P0096_UniqueBinarySearchTrees.h"
#include "P0097_InterleavingString.h"
#include "P0098_ValidateBinarySearchTree.h"
#include "P0099_RecoverBinarySearchTree.h"
#include "P0100_SameTree.h"
#include "P0101_SymmetricTree.h"
#include "P0102_BinaryTreeLevelOrderTraversal.h"
#include "P0103_BinaryTreeZigzagLevelOrderTraversal.h"
#include "P0104_MaximumDepthOfBinaryTree.h"
#include "P0105_ConstructBinaryTreeFromPreorderAndInorderTraversal.h"
#include "P0106_ConstructBinaryTreeFromInorderAndPostorderTraversal.h"
#include "P0107_BinaryTreeLevelOrderTraversalII.h"
#include "P0108_ConvertSortedArrayToBinarySearchTree.h"
#include "P0109_ConvertSortedListToBinarySearchTree.h"
#include "P0110_BalancedBinaryTree.h"
#include "P0111_MinimumDepthOfBinaryTree.h"
#include "P0112_PathSum.h"
#include "P0113_PathSumII.h"
#include "P0114_FlattenBinaryTreeToLinkedList.h"
#include "P0115_DistinctSubsequences.h"
#include "P0116_PopulatingNextRightPointersInEachNode.h"
#include "P0117_PopulatingNextRightPointersInEachNodeII.h"
#include "P0118_Pascal_Triangle.h"
#include "P0119_Pascal_TriangleII.h"
#include "P0120_Triangle.h"
#include "P0121_BestTimeToBuyAndSellStock.h"
#include "P0122_BestTimeToBuyAndSellStockII.h"
#include "P0123_BestTimeToBuyAndSellStockIII.h"
#include "P0124_BinaryTreeMaximumPathSum.h"
#include "P0125_ValidPalindrome.h"
#include "P0126_WordLadderII.h"
#include "P0127_WordLadder.h"
#include "P0128_LongestConsecutiveSequence.h"
#include "P0129_SumRootToLeafNumbers.h"
#include "P0130_SurroundedRegions.h"
#include "P0131_PalindromePartitioning.h"
#include "P0132_PalindromePartitioningII.h"
#include "P0133_CloneGraph.h"
#include "P0134_GasStation.h"
#include "P0135_Candy.h"
#include "P0136_SingleNumber.h"
#include "P0137_SingleNumberII.h"
#include "P0138_CopyListWithRandomPointer.h"
#include "P0139_WordBreak.h"
#include "P0140_WordBreakII.h"
#include "P0141_LinkedListCycle.h"
#include "P0142_LinkedListCycleII.h"
#include "P0143_ReorderList.h"
#include "P0144_BinaryTreePreorderTraversal.h"
#include "P0145_BinaryTreePostorderTraversal.h"
#include "P0146_LRUCache.h"
#include "P0147_InsertionSortList.h"
#include "P0148_SortList.h"
#include "P0149_MaxPointsOnLine.h"
#include "P0150_EvaluateReversePolishNotation.h"
#include "P0151_ReverseWordsInAString.h"
#include "P0152_MaximumProductSubarray.h"
#include "P0153_FindMinimumInRotatedSortedArray.h"
#include "P0154_FindMinimumInRotatedSortedArrayII.h"
#include "P0155_MinStack.h"
#include "P0160_IntersectionOfTwoLinkedLists.h"
#include "P0162_FindPeakElement.h"
#include "P0164_MaximumGap.h"
#include "P0165_CompareVersionNumbers.h"
#include "P0166_FractionToRecurringDecimal.h"
#include "P0167_TwoSumII_InputArrayIsSorted.h"
#include "P0168_ExcelSheetColumnTitle.h"
#include "P0169_MajorityElement.h"
#include "P0171_ExcelSheetColumnNumber.h"
#include "P0172_FactorialTrailingZeroes.h"
#include "P0173_BinarySearchTreeIterator.h"
#include "P0174_DungeonGame.h"
#include "P0179_LargestNumber.h"
#include "P0187_RepeatedDNASequences.h"
#include "P0189_RotateArray.h"
#include "P0190_ReverseBits.h"
#include "P0191_NumberOf1Bits.h"
#include "P0198_HouseRobber.h"
#include "P0199_BinaryTreeRightSideView.h"
#include "P0200_NumberOfIslands.h"
#include "P0201_BitwiseANDOfNumbersRange.h"
#include "P0202_HappyNumber.h"
#include "P0203_RemoveLinkedListElements.h"
#include "P0204_CountPrimes.h"
#include "P0205_IsomorphicStrings.h"
#include "P0206_ReverseLinkedList.h"
#include "P0207_CourseSchedule.h"
#include "P0208_ImplementTrie_PrefixTree.h"
#include "P0209_MinimumSizeSubarraySum.h"
#include "P0210_CourseScheduleII.h"
#include "P0211_AddAndSearchWord_DataStructureDesign.h"
#include "P0217_ContainsDuplicate.h"
#include "P0219_ContainsDuplicateII.h"
#include "P0220_ContainsDuplicateIII.h"
#include "P0234_PalindromeLinkedList.h"
#include "P0260_SingleNumberIII.h"
#include "P0980_UniquePathsIII.h"

using namespace std;

int Test_Problem(int number = 0);

#endif //LEETCODE_P0000_PROBLEMHEAD_H
